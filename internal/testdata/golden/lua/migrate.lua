-- Lua script to create the index.
-- Do not edit this file.

local timestamp = "1642524233"

-- Retrieve a list of indexes available.
local idxs = redis.call("FT._LIST")

-- The latest indexes to migrate.
local bar_idx = "rdsom:rdsomgolden:idx:Bar:1642524233"

local function starts_with(str, start)
	return str:sub(1, #start) == start
end

local function ends_with(str, ending)
   return ending == "" or str:sub(-#ending) == ending
end

local function create_bar()
  redis.call("FT.CREATE",
  bar_idx,
  "ON", "HASH",
  "PREFIX", "1", "rdsom:rdsomgolden:Bar:",
  "SCHEMA",
  "id", "TEXT",
  "_empty", "TAG", "CASESENSITIVE",
  "boolField", "NUMERIC",
  "floatField", "NUMERIC",
  "floatsField", "TEXT",
  "intField", "NUMERIC",
  "intsField", "TEXT",
  "stringField", "TEXT",
  "stringsField", "TEXT",
  "timeField", "NUMERIC")
end

-- A list of schemas to update.
local schemas = {
  Bar = true,
}

-- Map each schema's index to its creation function.
local create_funcs = {
  Bar = create_bar,
}

-- First, try to update existing indexes.
for _, idx in ipairs(idxs) do
	if starts_with(idx, "rdsom:rdsomgolden:idx:") then
    local _, _, schema = string.find(idx, ".+:(.+):%d+")
    if not ends_with(idx, timestamp) then
      redis.call("FT.DROP", idx)
      create_funcs[schema]()
    end
    schemas[schema] = false
	end
end

-- Handle the new indexes.
for schema, should_create in pairs(schemas) do
  if should_create then
    create_funcs[schema]()
  end
end

